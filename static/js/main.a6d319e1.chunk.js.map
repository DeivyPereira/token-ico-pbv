{"version":3,"sources":["components/Card.jsx","components/Metamask.jsx","components/Body.jsx","components/App.jsx","index.js"],"names":["Card","props","useState","tokens","setTokens","handleSubmit","event","a","preventDefault","buyTokens","className","style","width","textAlign","onSubmit","type","min","value","onChange","target","role","aria-valuenow","tokensSold","aria-valuemin","aria-valuemax","Metamask","class","id","height","src","alt","Body","metamask","tokenPrice","tokenBalance","onClick","tokenAddress","token","address","window","ethereum","request","method","params","options","symbol","decimals","image","console","log","error","addToken","href","tokenSale","account","sizes","transform","App","content","setAccount","setTokenPrice","setTokenSold","tokenData","setTokenData","setTokenSale","setTokenBalance","loading","setLoading","reload","setReload","setMetamask","useEffect","loadWeb3","web3","loadBlockchainData","eth","net","getId","networkId","connect","isConnected","send","Token","networks","getAccounts","accounts","Contract","abi","tokenContract","methods","balanceOf","call","toString","alert","tokenSaleData","TokenSale","tokenSaleContract","utils","fromWei","_tokensSold","Web3","enable","currentProvider","toWei","String","from","on","hash","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6d319e1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Card(props) {\r\n\tconst [tokens, setTokens] = useState(1);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetTokens(event.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tawait props.buyTokens(tokens);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"card mr-auto ml-auto\" style={{ width: \"100%\" }}>\r\n\t\t\t<h3 className=\"card-title py-1 my-3\" style={{ textAlign: \"center\" }} >Comprar Tokens</h3>\r\n\t\t\t{/* <span className=\"border border-dark\"></span> */}\r\n\t\t\t<form className=\"form-group my-3 mx-3\" onSubmit={handleSubmit}>\r\n\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t<input className=\"form-control input-lg\" type=\"number\" min=\"1\" value={tokens} onChange={handleChange} />\r\n\t\t\t\t\t<div className=\"input-group-append\">\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary input-group-btn\">\r\n\t\t\t\t\t\t\tComprar Tokens\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\r\n\t\t\t<div className=\"progress mb-3 mx-3\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n\t\t\t\t\trole=\"progressbar\"\r\n\t\t\t\t\taria-valuenow={props.tokensSold}\r\n\t\t\t\t\taria-valuemin=\"0\"\r\n\t\t\t\t\taria-valuemax=\"750000\"\r\n\t\t\t\t\tstyle={{ width: (props.tokensSold / 750000) * 100 + \"%\" }}\r\n\t\t\t\t></div>\r\n\t\t\t</div>\r\n\t\t\t<p>\r\n\t\t\t\t<span>{props.tokensSold}</span>/<span>750000</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\n\r\nconst Metamask = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"feature__text-content\">\r\n        <h2 className=\"feature__text-title\">\r\n          Para realizar una oferta debes activar Metamask y conectarte conectarte a la Red Rinkeby\r\n        </h2>\r\n      </div>\r\n      <div class=\"row text-center\">\r\n        <div class=\"col-md-12\">\r\n          <img\r\n            id=\"metaicon\"\r\n            class=\"meta-gray\"\r\n            width=\"500\"\r\n            height=\"100\"\r\n            src=\"https://logowik.com/content/uploads/images/metamask4112.jpg\"\r\n             alt=\"\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Metamask;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport Metamask from \"./Metamask\";\r\n\r\nexport default function Body(props) {\r\n  const addToken = () => {\r\n    const tokenAddress = props.token.address;\r\n    const tokenSymbol = \"PBV\";\r\n    const tokenDecimals = 0.1;\r\n    const tokenImage =\r\n      \"https://media-exp1.licdn.com/dms/image/C4D0BAQFjoODjueVD0w/company-logo_200_200/0/1624891542171?e=2159024400&v=beta&t=Q33QHHiWXZAc6UX4XF_kUJE20MhgM-yyc6FOGzLGVgU\";\r\n\r\n    try {\r\n      // wasAdded is a boolean. Like any RPC method, an error may be thrown.\r\n      const wasAdded = window.ethereum.request({\r\n        method: \"wallet_watchAsset\",\r\n        params: {\r\n          type: \"ERC20\", // Initially only supports ERC20, but eventually more!\r\n          options: {\r\n            address: tokenAddress, // The address that the token is at.\r\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\r\n            decimals: tokenDecimals, // The number of decimals in the token\r\n            image: tokenImage, // A string url of the token logo\r\n          },\r\n        },\r\n      });\r\n\r\n      if (wasAdded) {\r\n        console.log(\"Thanks for your interest!\");\r\n      } else {\r\n        console.log(\"Your loss!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <section id=\"over\" className=\"about\">\r\n        <div className=\"supportbar\">\r\n          <div className=\"supportbar__container\">\r\n            <span className=\"supportbar__text\">\r\n              Invierte en las futuras promesas\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"feature\">\r\n          <div className=\"feature__text--left-bottom\">\r\n            {props.metamask ? (\r\n              <div className=\"feature__text-content\">\r\n                <h2 className=\"feature__text-title\">\r\n                  ¡Presentamos a Pablo Valencia Token (PBV) el token es\r\n                  equivalente a {props.tokenPrice} Ether\r\n                </h2>\r\n                {props.tokenBalance > 0 ? (\r\n                  <button\r\n                    onClick={() => addToken()}\r\n                    type=\"button\"\r\n                    className=\"nav-list-item-btn btn--open\"\r\n                  >\r\n                    Agregar Token a mi Metamask\r\n                  </button>\r\n                ) : ( \r\n\t\t\t\t\t<a href=\"https://faucet.rinkeby.io/\" target=\"_blank\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"nav-list-item-btn btn--open\"\r\n                  >\r\n                    Obtener ETH en Rinkeby Gratis\r\n                  </button>\r\n\t\t\t\t  </a>\r\n                )}\r\n\r\n                <p>Actualmentes posees {props.tokenBalance} PBV</p>\r\n                <Card\r\n                  buyTokens={props.buyTokens}\r\n                  tokensSold={props.tokensSold}\r\n                  tokenPrice={props.tokenPrice}\r\n                  tokenSale={props.tokenSale}\r\n                />\r\n                <p className=\"mt-3\">\r\n                  Tu Wallet:{\" \"}\r\n                  <span className=\"font-weight-bold\">{props.account}</span>\r\n                </p>\r\n                <span className=\"feature__icon--apple\">Voor iOS</span>\r\n                <span className=\"feature__icon--android\">Voor Android</span>\r\n              </div>\r\n            ) : (\r\n              <Metamask />\r\n            )}\r\n          </div>\r\n          <div className=\"feature__img--right\">\r\n            <div className=\"feature__img-wrapper\">\r\n              <img\r\n                width=\"1115\"\r\n                height=\"659\"\r\n                src=\"https://teampulse.nl/storage/temp/public/ee9/d93/cbf/ipad_met_pen__1115.png\"\r\n                alt=\"Teamanalyse app\"\r\n                className=\"feature__image\"\r\n                sizes=\"(max-width: 1115px) 100vw, 1115px\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section id=\"features\" className=\"features\">\r\n        <div className=\"feature\">\r\n          <div className=\"feature__img--left\">\r\n            <div className=\"feature__img-wrapper\">\r\n              <img\r\n                alt=\"Pablo Sandoval\"\r\n                style={{ transform: \"none\" }}\r\n                src=\"https://www.fivb.org/Vis2009/Images/GetImage.asmx?Type=Press&No=84028&width=300&height=450&stretch=uniformtofill\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"feature__text--right\">\r\n            <div className=\"feature__text-content\">\r\n              <h2 className=\"feature__text-title\">Pablo Sandoval (PBV)</h2>\r\n              <p>\r\n                es un jugador de voleibol holandés , miembro de la selección\r\n                nacional masculina de voleibol de los Países Bajos . Participó\r\n                en el Campeonato de Europa de 2017 . A nivel de clubes, juega en\r\n                el equipo turco Ziraat Bankası Ankara . [1]\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"feature\">\r\n          <div className=\"feature__text--left\">\r\n            <div className=\"feature__text-content\">\r\n              <h2 className=\"feature__text-title\">Estadisticas</h2>\r\n              <ul>\r\n                <li>🏆 Copa de Holanda 2014/2015 , con VC Zwolle</li>\r\n                <li>🥇Campeonato de Holanda 2014/2015 , con VC Zwolle</li>\r\n                <li>\r\n                  🏅Campeonato de Alemania 2016/2017 , con voleas de reciclaje\r\n                  de Berlín\r\n                </li>\r\n                <li>🏆Copa de Turquía 2018/2019 , con Fenerbahçe İstanbul</li>\r\n                <li>🥇 Turquía 2018/2019 , con Fenerbahçe İstanbul</li>\r\n                <li>\r\n                  🥉Campeonato de Turquía 2020/2021 , con Ziraat Bankası Ankara\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"feature__img--right-small\">\r\n            <div className=\"feature__img-wrapper\">\r\n              <img\r\n                width=\"1801\"\r\n                height=\"1813\"\r\n                src=\"https://teampulse.nl/themes/teampulse/dist/img/design/acties.png\"\r\n                alt=\"Teampulse acties invoeren\"\r\n                className=\"feature__image\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"feature\">\r\n          <div className=\"feature__text--centered\">\r\n            <div className=\"feature__text-content\">\r\n              <h2 className=\"feature__text-title\">WhitePaper PBV Token</h2>\r\n              <strong>PBV token utilities</strong>\r\n              <div className=\"md-6\">\r\n                <p>- Token a la venta: 750.000 </p>\r\n                <p>- Liquidez: 700.000</p>\r\n                <p>- Bloqueo: 50.000 (93,33% del total)</p>\r\n                <p>\r\n                  - 5% de adquisición de derechos cada mes después del\r\n                  lanzamiento del deportista.\r\n                </p>\r\n              </div>\r\n              <div className=\"md-6\">\r\n                {props.token && (\r\n                  <p>\r\n                    - Token Contrato de tiempo bloqueado:\r\n                    {props.token.address}\r\n                  </p>\r\n                )}\r\n                <p>Uso de fondos:</p>\r\n                <p>- 50% de gastos de desarrollo</p>\r\n                <p>- 50% de liquidez para canje</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"feature__img--centered\">\r\n            <div className=\"feature__img-wrapper\">\r\n              <img\r\n                width=\"1340\"\r\n                height=\"763\"\r\n                src=\"https://teampulse.nl/themes/teampulse/dist/img/design/dashboard2.png\"\r\n                alt=\"Teampulse dashboard\"\r\n                className=\"feature__image\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"feature container text-center \"></div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Web3 from \"web3\";\r\nimport Token from \"../abis/GargToken\";\r\nimport TokenSale from \"../abis/GargTokenSale\";\r\nimport Body from \"./Body\";\r\n\r\nexport default function App() {\r\n  let content;\r\n  const [account, setAccount] = useState(\"\");\r\n  const [tokenPrice, setTokenPrice] = useState(\"\");\r\n  const [tokensSold, setTokenSold] = useState(\"\");\r\n  const [tokenData, setTokenData] = useState();\r\n  const [tokenSale, setTokenSale] = useState({});\r\n  const [tokenBalance, setTokenBalance] = useState(\"0\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [reload, setReload] = useState(false);\r\n  const [metamask, setMetamask] = useState(false);\r\n  useEffect(() => {\r\n    loadWeb3();\r\n    if (window.web3) loadBlockchainData();\r\n  }, [reload]);\r\n\r\n  const loadBlockchainData = async () => {\r\n    /** Se carga WEB3  */\r\n    const web3 = window.web3;\r\n    /** Se identifica que network se encuentra */\r\n    const networkId = await web3.eth.net.getId();\r\n\tconst connect = window.ethereum.isConnected()\r\n    console.log(networkId);\r\n    console.log(connect);\r\n\tif (window.ethereum && networkId === 4) {\r\n\t\tawait window.ethereum.send('eth_requestAccounts');\r\n\t\tconst tokenData = Token.networks[networkId];\r\n\t\tsetTokenData(tokenData);\r\n\t\tconsole.log(tokenData.address);\r\n  \r\n\t\tconst accounts = await web3.eth.getAccounts();\r\n\t\tsetAccount(accounts[0]);\r\n  \r\n\t\tif (tokenData) {\r\n\t\t  const tokenContract = await new web3.eth.Contract(\r\n\t\t\tToken.abi,\r\n\t\t\ttokenData.address\r\n\t\t  );\r\n\t\t  console.log(accounts[0]);\r\n\t\t  const tokenBalance = await tokenContract.methods\r\n\t\t\t.balanceOf(accounts[0])\r\n\t\t\t.call();\r\n\t\t  console.log(tokenBalance);\r\n\t\t  setTokenBalance(tokenBalance.toString());\r\n\t\t} else {\r\n\t\t  window.alert(\"Conexión a metamask no detectada\");\r\n\t\t}\r\n  \r\n\t\t// Load Wallet\r\n\t\tconst tokenSaleData = TokenSale.networks[networkId];\r\n\t\tif (tokenSaleData) {\r\n\t\t  const tokenSaleContract = new web3.eth.Contract(\r\n\t\t\tTokenSale.abi,\r\n\t\t\ttokenSaleData.address\r\n\t\t  );\r\n\t\t  setTokenSale(tokenSaleContract);\r\n\t\t  let tokenPrice = await tokenSaleContract.methods.tokenPrice().call();\r\n\t\t  tokenPrice = await web3.utils.fromWei(tokenPrice.toString(), \"ether\");\r\n\t\t  setTokenPrice(tokenPrice.toString());\r\n\t\t  const _tokensSold = await tokenSaleContract.methods.tokensSold().call();\r\n\t\t  setTokenSold(_tokensSold.toString());\r\n\t\t} else {\r\n\t\t  window.alert(\"Conexión a metamask no detectada\");\r\n\t\t}\r\n\t\tsetMetamask(true);\r\n    }else{\r\n\t\tsetMetamask(false);\r\n\t}\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  async function loadWeb3() {\r\n    // Modern dapp browsers...\r\n    if (window.ethereum) {\r\n      console.log(1);\r\n      window.web3 = new Web3(window.ethereum);\r\n      try {\r\n        await window.ethereum.enable();\r\n      } catch (error) {\r\n        console.log(\"Error:\", error);\r\n      }\r\n    }\r\n    // Legacy dapp browsers...\r\n    else if (window.web3) {\r\n      console.log(2);\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    }\r\n    // Non-dapp browsers...\r\n    else {\r\n      console.log(3);\r\n      /* window.alert(\r\n\t\t\t\t\"¡ATENCIÓN! La aplicación no se cargará. Se detectó un navegador que no es Ethereum. ¡Debería considerar probar MetaMask!\"\r\n\t\t\t);*/\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const buyTokens = async (tokens) => {\r\n    setLoading(true);\r\n    await tokenSale.methods\r\n      .buyTokens(tokens)\r\n      .send({\r\n        value: window.web3.utils.toWei(String(tokens * tokenPrice), \"ether\"),\r\n        from: account,\r\n      })\r\n      .on(\"transactionHash\", (hash) => {\r\n        setReload(!reload);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  if (loading === true) {\r\n    content = <p className=\"text-center\">Cargando...</p>;\r\n  } else {\r\n    content = (\r\n      <Body\r\n        account={account}\r\n        buyTokens={buyTokens}\r\n        tokenBalance={tokenBalance}\r\n        tokenPrice={tokenPrice}\r\n        tokensSold={tokensSold}\r\n        metamask={metamask}\r\n        token={tokenData}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      {/* <Navbar account={account} /> */}\r\n\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./components/App.jsx\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}